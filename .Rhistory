#| label: load-packages
#| message: false
library(tidyverse)
library(tidymodels)
library(openintro)
install.packages("openintro")
#| label: load-packages
#| message: false
library(tidyverse)
library(tidymodels)
library(openintro)
#| label: data-prep
loans <- loans_full_schema %>%
mutate(
credit_util = total_credit_utilized / total_credit_limit,
bankruptcy = as.factor(if_else(public_record_bankrupt == 0, 0, 1)),
verified_income = droplevels(verified_income),
homeownership = str_to_title(homeownership),
homeownership = fct_relevel(homeownership, "Rent", "Mortgage", "Own")
) %>%
rename(credit_checks = inquiries_last_12m) %>%
select(
interest_rate, loan_amount, verified_income,
debt_to_income, credit_util, bankruptcy, term,
credit_checks, issue_month, homeownership
)
#| label: glimpse-loans
glimpse(loans)
View(loans)
#| label: explore-loans
loans %>%
select(interest_rate) %>%
summarize(mean)
#| label: explore-loans
loans %>%
select(interest_rate) %>%
mean()
# add code to explore loans here
#| label: explore-loans
loans %>%
mean(interest_rate)
# add code to explore loans here
#| label: explore-loans
loans %>%
summarize(mean = mean(interest_rate))
# add code to explore loans here
#| label: rate-util-fit
rate_util_fit <- linear_reg() %>%
fit(interest_rate ~ credit_util, data = loans)
tidy(rate_util_fit)
#| label: rate-util-plot
#| warning: false
ggplot(loans, aes(x = credit_util, y = interest_rate)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm")
levels(loans$homeownership)
#| label: rate-home-fit
# add code here.
#| label: rate-home-fit
# add code here.
#| label: rate-home-fit
# add code here.
rate_home_fit <- linear_reg() %>%
fit(interest_rate ~ homeownership, data = loans)
tidy(rate_home_fit)
#| label: rate-util-home-fit
rate_util_home_fit <- linear_reg() %>%
fit(interest_rate ~ credit_util+homeownership, data = loans)
tidy(rate_util_home_fit)
# add code here
#| label: rate-util-home-int-fit
# add code here
rate_util_home_fit <- linear_reg() %>%
fit(interest_rate ~ credit_util*homeownership, data = loans)
tidy(rate_util_home_fit)
#| label: glance
# add code here
linear_reg() %>%
fit((interest_rate ~ credit_util*homeownership, data = loans) %>%
#| label: glance
# add code here
linear_reg() %>%
fit(interest_rate ~ credit_util*homeownership, data = loans) %>%
glance()
#| label: glance
# add code here
linear_reg() %>%
fit(interest_rate ~ credit_util*homeownership, data = loans) %>%
glance()
linear_reg() %>%
fit(interest_rate ~ credit_util+homeownership, data = loans) %>%
glance()
linear_reg() %>%
fit(interest_rate ~ credit_util, data = loans) %>%
glance()
linear_reg() %>%
fit(interest_rate ~ homeownership, data = loans) %>%
glance()
#| label: new-fit
# add code here
new_fit <- linear_reg() %>%
fit(interest_rate ~ homeownership*issue_month*credit_util, data = loans)
tidy(new_fit)
#| label: load-packages
#| message: false
library(tidyverse)
library(tidymodels)
library(openintro)
#| label: data-prep
loans <- loans_full_schema %>%
mutate(
credit_util = total_credit_utilized / total_credit_limit,
bankruptcy = as.factor(if_else(public_record_bankrupt == 0, 0, 1)),
verified_income = droplevels(verified_income),
homeownership = str_to_title(homeownership),
homeownership = fct_relevel(homeownership, "Rent", "Mortgage", "Own")
) %>%
rename(credit_checks = inquiries_last_12m) %>%
select(
interest_rate, loan_amount, verified_income,
debt_to_income, credit_util, bankruptcy, term,
credit_checks, issue_month, homeownership
)
#| label: glimpse-loans
glimpse(loans)
#| label: load-packages
#| message: false
library(tidyverse)
library(tidymodels)
library(openintro)
# add code here
glimpse(email)
# add code here
data(email)
ggplot(aes = email,
x = spam) %>%
ggplot(bar)
# add code here
data(email)
ggplot(aes = email,
x = spam) %>%
geom_bar()
# add code here
data(email)
ggplot(aes = email,
x = spam) +
geom_bar()
# add code here
data(email)
ggplot(aes = email,
x = exclaim_mess
) +
geom_bar()
View(email)
# add code here
data(email)
ggplot(aes = email,
x = spam
) +
geom_bar()
email %>%
select(spam) %>%
summarize(m = mean(spam))
# add code here
data(email)
ggplot(aes = email,
x = exclaim_mess
) +
geom_bar()
# add code here
data(email)
ggplot(aes = email,
x = exclaim_mess
) +
geom_point()
# add code here
data(email)
ggplot(aes = email,
x = exclaim_mess) +
geom_bar()
# add code here
data(email)
ggplot(aes = email,
x = exclaim_mess) +
geom_density()
# add code here
data(email)
ggplot(aes = email,
x = spam) +
geom_density()
# add code here
data(email)
ggplot(data = email, aes(x = spam)) +
geom_density()
# add code here
data(email)
ggplot(data = email, aes(x = spam, y = exclaim_mess)) +
geom_density()
# add code here
data(email)
ggplot(data = email, aes(x = spam)) +
geom_density()
ggplot(data = email, aes(x = exclaim_mess)) +
geom_density()
email %>%
filter(spam = "1") %>%
summarize(m = mean(spam))
email %>%
filter(spam == "1") %>%
summarize(m = mean(spam))
email %>%
filter(spam == "1") %>%
summarize(x = mean(exclaim_Mess))
email %>%
filter(spam == "1") %>%
summarize(x = mean(exclaim_mess))
email %>%
filter(spam == "1") %>%
summarize(mean_spam = mean(exclaim_mess))
email %>%
filter(spam == "0") %>%
summarize(mean_notspam = mean(exclaim_mess))
ggplot(data = email, aes(x = spam, y = mean_num_char)) +
geom_density()
ggplot(data = email, aes(x = spam, y = mean_num_char)) +
geom_point()
email %>%
filter(spam == "1") %>%
summarize(mean_spam = mean(exclaim_mess))
email %>%
filter(spam == "0") %>%
summarize(mean_notspam = mean(exclaim_mess))
email %>%
group_by(num_char)%>%
summarize(mean_num_char = mean(num_char))
ggplot(data = email, aes(x = spam, y = mean_num_char)) +
geom_point()
email %>%
filter(spam == "1") %>%
summarize(mean_spam = mean(exclaim_mess))
email %>%
filter(spam == "0") %>%
summarize(mean_notspam = mean(exclaim_mess))
email<-email %>%
group_by(num_char)%>%
summarize(mean_num_char = mean(num_char))
ggplot(data = email, aes(x = spam, y = mean_num_char)) +
geom_point()
View(email)
email %>%
filter(spam == "1") %>%
summarize(mean_spam = mean(exclaim_mess))
# add code here
data(email)
ggplot(data = email, aes(x = spam)) +
geom_density()
ggplot(data = email, aes(x = exclaim_mess)) +
geom_density()
email %>%
filter(spam == "1") %>%
summarize(mean_spam = mean(exclaim_mess))
email %>%
filter(spam == "0") %>%
summarize(mean_notspam = mean(exclaim_mess))
email<-email %>%
group_by(num_char)%>%
summarize(mean_num_char = mean(num_char))
# add code here
data(email)
ggplot(data = email, aes(x = spam)) +
geom_density()
ggplot(data = email, aes(x = exclaim_mess)) +
geom_density()
email %>%
filter(spam == "1") %>%
summarize(mean_spam = mean(exclaim_mess))
email %>%
filter(spam == "0") %>%
summarize(mean_notspam = mean(exclaim_mess))
email %>%
group_by(num_char)%>%
summarize(mean_num_char = mean(num_char))
email %>%
filter(spam == "1") %>%
summarize(mean_spam = mean(exclaim_mess))
email %>%
filter(spam == "0") %>%
summarize(mean_notspam = mean(exclaim_mess))
email <- email %>%
group_by(num_char)%>%
mutate(summarize(mean_num_char = mean(num_char)))
